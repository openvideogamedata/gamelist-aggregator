// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace community.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230129005516_AddRelationUserItemLikesDislikes")]
    partial class AddRelationUserItemLikesDislikes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ItemRequestUser", b =>
                {
                    b.Property<long>("ItemsLikedId")
                        .HasColumnType("bigint");

                    b.Property<long>("UsersLikedId")
                        .HasColumnType("bigint");

                    b.HasKey("ItemsLikedId", "UsersLikedId");

                    b.HasIndex("UsersLikedId");

                    b.ToTable("UserLikedItem", (string)null);
                });

            modelBuilder.Entity("ItemRequestUser1", b =>
                {
                    b.Property<long>("ItemsDislikedId")
                        .HasColumnType("bigint");

                    b.Property<long>("UsersDislikedId")
                        .HasColumnType("bigint");

                    b.HasKey("ItemsDislikedId", "UsersDislikedId");

                    b.HasIndex("UsersDislikedId");

                    b.ToTable("UserDislikedItem", (string)null);
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("GivenName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameIdentifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("community.Data.Game", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("community.Data.ItemRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("Dislike")
                        .HasColumnType("bigint");

                    b.Property<long>("GameId")
                        .HasColumnType("bigint");

                    b.Property<long>("GameListId")
                        .HasColumnType("bigint");

                    b.Property<string>("GameTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Like")
                        .HasColumnType("bigint");

                    b.Property<long>("Score")
                        .HasColumnType("bigint");

                    b.Property<string>("SourceName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SourceUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ItemRequests");
                });

            modelBuilder.Entity("ItemRequestUser", b =>
                {
                    b.HasOne("community.Data.ItemRequest", null)
                        .WithMany()
                        .HasForeignKey("ItemsLikedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("User", null)
                        .WithMany()
                        .HasForeignKey("UsersLikedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ItemRequestUser1", b =>
                {
                    b.HasOne("community.Data.ItemRequest", null)
                        .WithMany()
                        .HasForeignKey("ItemsDislikedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("User", null)
                        .WithMany()
                        .HasForeignKey("UsersDislikedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
