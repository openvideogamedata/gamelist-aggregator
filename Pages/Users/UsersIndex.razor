@page "/admin/users"
@inject UserService _userService
@using community.Utils

<h1>Users</h1>
@if (users == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <CascadingAuthenticationState>
        <AuthorizeView Roles="admin">
            <Authorized>
                <table class="table">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>NameIdentifier</th>
                            <th>GivenName</th>
                            <th>Surname</th>
                            <th>Nickname</th>
                            <th>Role</th>
                            <th>Lists</th>
                            <th>Ban?</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in users)
                        {
                            <tr>
                                <td>@user.Id</td>
                                <td><a href="/users/@user.Nickname">@user.NameIdentifier</a></td>
                                <td>@user.GivenName</td>
                                <td>@user.Surname</td>
                                <td>@(user.Nickname != user.NameIdentifier ? user.Nickname : "")</td>
                                <td>@user.Role</td>
                                <td>@(user.GameListsContributed?.Count ?? 0)</td>
                                @if (user.Banned)
                                {
                                    <td><button class="btn btn-primary" @onclick="() => UnbanUser(user.NameIdentifier)">Unban...</button></td>
                                }
                                else
                                {
                                    <td><button class="btn btn-danger" @onclick="() => BanUser(user.NameIdentifier)">Ban!</button></td>
                                }
                                
                            </tr>
                            
                        }
                    </tbody>
                </table>
            </Authorized>
            <NotAuthorized>
                <p>Nothing to see here</p>
            </NotAuthorized>
        </AuthorizeView>
    </CascadingAuthenticationState>

    <Paginator pager="@pager" OnPageClickEvent="@((args)=> GetUsers(args.Item1))"/>
}

@code {
    private List<User>? users;
    private Pager pager;
    
    protected override void OnParametersSet()
    {
        this.GetUsers();
    }

    private void GetUsers(int page = 1) {
        (users, pager) = _userService.GetAll(page);
    }

    protected async Task BanUser(string userNameId)
    {
        await _userService.ToggleBan(userNameId, true);
        this.GetUsers();
    }
    protected async Task UnbanUser(string userNameId)
    {
        await _userService.ToggleBan(userNameId, false);
        this.GetUsers();
    }
}