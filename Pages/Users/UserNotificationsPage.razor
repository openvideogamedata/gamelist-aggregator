@page "/users/notifications"
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage ProtectedSessionStore
@inject UserService _userService
@inject NavigationManager NavigationManager


<div>

    <div class="row">
        <div class="col">
            <div class="mb-3">
                <h1>@user.FullName - Notifications</h1>
            </div>
        </div>
    </div>

    <table class="table" style="min-height: 10em;">
        <thead>
            <tr>
                <th scope="col">Message</th>
            </tr>
        </thead>
        <tbody>
            @if (user.Notifications != null)
            {
                @foreach (var notification in user.Notifications.OrderByDescending(x => x.DateAdded))
                {
                    <tr>
                        <td>@notification.Message</td>
                    </tr>
                }
            }
        </tbody>
    </table>
    
</div>

@code {
    private User user;
    private bool saving = false;
    
    protected override async Task OnInitializedAsync()
    {
        RedirectToLoginIfNotLogged();
        user = _userService.GetLoggedUserWithNotifications(true);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await ProtectedSessionStore.SetAsync("hasNotifications", false);
    }

    private void RedirectToLoginIfNotLogged()
    {
        if (!_userService.IsLogged())
            NavigationManager.NavigateTo($"/Identity/Login?returnUrl={NavigationManager.ToBaseRelativePath(NavigationManager.Uri)}", true);
    }
}