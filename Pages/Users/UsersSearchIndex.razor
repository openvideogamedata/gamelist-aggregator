@page "/users"
@inject UserService _userService
@inject NavigationManager NavigationManager
@inject IStringLocalizer<UsersSearchIndex> Loc

@if (isLogged)
{
    <h1>@Loc["Users"]</h1>
    <InputText disabled="@searching" class="form-control" @bind-Value="searchedText" @onblur="Search" @onkeydown="@PressedKey"/>
    <UsersSearch Filters="@Filters"/>
}
else
{
    <p><a href="@GetLoginWithRedirectUrl()">Login</a> @Loc["ToUseThisFeature"]</p>
}

@code {
    private GeneralFilters Filters { get; set; } = null;
    private string searchedText = "";
    private bool searching = false;
    private bool isLogged = false;

    protected override void OnInitialized()
    {
        isLogged = _userService.IsLogged();
    }

    private void GetUsers(int page = 1)
    {
        if (!string.IsNullOrEmpty(searchedText))
            Filters = new GeneralFilters(page, 10, 5, searchedText);
    }

    private void Search()
    {
        GetUsers(1);
    }

    private void PressedKey(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
            GetUsers(1);
    }

    private string GetLoginWithRedirectUrl()
    {
        return $"/Identity/Login?returnUrl={NavigationManager.ToBaseRelativePath(NavigationManager.Uri)}";
    }
}