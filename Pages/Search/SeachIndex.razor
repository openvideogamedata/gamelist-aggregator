@page "/search/{input?}"
@inject UserService _userService
@using community.Utils

<ul class="nav nav-tabs mb-2">
    <li style="cursor: pointer;" class="nav-item">
        <a class="nav-link prevent-select @(showLists ? "active" : "")" @onclick="() => onClickTab(lists: true)"><i class="oi oi-list"></i>Lists</a>
    </li>
    <li style="cursor: pointer;" class="nav-item">
        <a class="nav-link prevent-select @(showGames ? "active" : "")" @onclick="() => onClickTab(games: true)"><i class="oi oi-puzzle-piece"></i>Games</a>
    </li>
    @if (isLogged)
    {
        <li style="cursor: pointer;" class="nav-item">
            <a class="nav-link prevent-select @(showUsers ? "active" : "")" @onclick="() => onClickTab(users: true)"><i class="oi oi-people"></i>Users</a>
        </li>
    }
</ul>

@if (showLists)
{
    <ListsCategories Filters="@ListsFilters"/>
}
else if (showUsers)
{
    <UsersSearch Filters="@UserFilters"/>
}
else if (showGames)
{
    <Games Filters="@GamesFilters"/>
}

@code {
    [Parameter]
    public string input { get; set; }

    private List<User>? users;
    private Pager pager;
    public FilterListsCategory ListsFilters { get; set; } = null;
    public GeneralFilters UserFilters { get; set; } = null;
    public GameFilters GamesFilters { get; set; } = null;
    private bool showLists = true;
    private bool showUsers = false;
    private bool showGames = false;
    private bool isLogged = false;

    protected override void OnInitialized()
    {
        isLogged = _userService.IsLogged();
    }
    
    protected override void OnParametersSet()
    {
        ShowResults();
    }

    private void ShowResults()
    {
        if (showLists)
        {
            if (string.IsNullOrEmpty(input))
                ListsFilters = null;
            else
                ListsFilters = new FilterListsCategory(1, 10, 6, new List<string>(), input);
        }
        else
            ListsFilters = null;

        if (showUsers)
        {
            if (string.IsNullOrEmpty(input))
                UserFilters = null;
            else
                UserFilters = new GeneralFilters(1, 10, 5, input);
        }
        else
            UserFilters = null;

        if (showGames)
        {
            if (string.IsNullOrEmpty(input))
                GamesFilters = null;
            else
                GamesFilters = new GameFilters(1, 10, 5, input);
        }
        else
            GamesFilters = null;
    }

    private void onClickTab(bool lists = false, bool users = false, bool games = false) {
        showLists = showUsers = showGames = false;

        showLists = lists;
        showUsers = users;
        showGames = games;
        ShowResults();
    }
}