@page "{Banned?}"
@model community.Pages.IndexModel
@using community.Utils
@inject Microsoft.Extensions.Localization.IStringLocalizer<community.Pages.GameListPage.Home> Loc
@using community.Dtos
@inject Microsoft.Extensions.Localization.IStringLocalizer<community.Shared.GameLists> GameListLoc
@{
    Layout = "_StaticLayout";
    ViewData["Title"] = "Home";
}

<div class="row">
    <div class="col">
        <h1 class="open-title"><b>Open Video Game Data</b></h1>
        <p>@Loc["Subtitle"]</p>
    </div>
</div>

@if (Model.IsBanned)
{
    <div class="alert alert-danger mt-3" role="alert">
        @Loc["Banned"]
    </div>
}

<section class="mt-4">
    <h2>@Loc["TrendingTitle"]</h2>
    <p class="open-sub-title">@Loc["TrendingSubtitle"]</p>
    <hr style="margin-bottom: 10px; margin-top: 0; position: relative; z-index: -999;">

    @if (Model.PinnedLists.Count == 0)
    {
        <p class="text-muted">@Loc["Loading"]...</p>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-3">
            @foreach (var list in Model.PinnedLists)
            {
                <div class="col">
                    <div class="pinned-list h-100">
                        <div class="cursor-pointer mb-2">
                            @foreach (var winner in list.TopThreeWinners.Take(4))
                            {
                                var cover = Model.ResolveCoverImage(winner.CoverImageUrl);
                                <img class="game-card-cover me-1 mb-1" src="@cover" alt="@winner.GameTitle" title="@winner.GameTitle" height="112" width="83" />
                            }
                        </div>
                        <a class="pinned-list-title" href="/list/@list.Slug"><b>@list.Title @list.Year</b></a>
                        <p class="pinned-list-info">
                            @GameListLoc["Basedon"] <b>@list.NumberOfSources</b> @GameListLoc["List"]@(list.NumberOfSources > 1 ? "s" : "")
                            -
                            @list.NumberOfGames @GameListLoc["Game"]@(list.NumberOfGames > 1 ? "s" : "")
                        </p>
                    </div>
                </div>
            }
        </div>
    }
</section>

<section class="mt-5">
    <h2>@Loc["UserActivityTitle"]</h2>
    <p class="open-sub-title">@Loc["UserActivitySubtitle"]</p>
    <hr style="margin-bottom: 10px; margin-top: 0; position: relative; z-index: -999;">

    @if (Model.UserActivities.Count == 0)
    {
        <p class="text-muted">@Loc["Loading"]...</p>
    }
    else
    {
        @foreach (var activity in Model.UserActivities)
        {
            var user = activity.User;
            <div class="d-flex align-items-center user-activity-card mb-3">
                <div class="user-avatar me-3">@Model.GetUserInitials(user)</div>
                <div>
                    @if (activity.Activity == ActivityType.GameList && activity.GameList is not null && user is not null)
                    {
                        <div>
                            <a href="@activity.UserProfileUrl">@user.FullName</a> @Loc["UserActivityDescriptionList"]:
                        </div>
                        <div>
                            "<a class="source-tag-a" href="@activity.GameListUrl">@activity.GameList.FinalGameList?.GetFullName()</a>"
                            @activity.DateAdded.ToNaturalLanguage()
                        </div>
                    }
                    else if (activity.Activity == ActivityType.Tracker && activity.MostRecentTracker is not null && user is not null)
                    {
                        <div>
                            <a href="@activity.UserProfileUrl">@user.FullName</a> @Loc["UserActivityDescriptionTracker"]:
                        </div>
                        <div>
                            @Loc["UserActivityDescriptionTracker1"] @activity.ItemsTracked
                            <a href="@(activity.UserProfileUrl + $"/trackers?trackStatus={(int)activity.MostRecentTracker.Status}")">@Loc["UserActivityDescriptionTracker2"]</a>
                            @Loc["UserActivityDescriptionTimeTracker"]
                            @activity.DateAdded.ToNaturalLanguage(false)
                        </div>
                    }
                </div>
            </div>
        }
    }

    <a class="btn btn-primary mt-3" href="/users/lists/new">
        <span class="oi oi-plus" aria-hidden="true"></span> @Loc["CreateYourList"]
    </a>
</section>

<section class="mt-5">
    <h2>@Loc["AllGameListsTitle"]</h2>
    <p class="open-sub-title">@Loc["AllGameListsSubtitle"]</p>
    <hr style="margin-bottom: 10px; margin-top: 0; position: relative; z-index: -999;">

    <form method="get" action="@Model.CurrentPath" class="mb-3">
        <input type="hidden" name="tags" value="@Model.TagsQueryValue" />
        <input type="hidden" name="page" value="1" />
        <div class="input-group">
            <input type="search" class="form-control" name="search" value="@Model.SearchTerm" placeholder="Search lists" />
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
    </form>

    <div class="mb-3">
        @foreach (var tag in Model.AllTags)
        {
            var isSelected = Model.TagIsSelected(tag);
            <a href="@Model.BuildTagUrl(tag)" class="btn btn-@(isSelected ? "secondary" : "primary") me-2 mb-2" style="width: 120px;">
                @tag.FirstCharToUpper()
            </a>
        }
    </div>

    @if (Model.FilteredLists.Count == 0)
    {
        <p class="text-muted">No lists found.</p>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-3">
            @foreach (var item in Model.FilteredLists)
            {
                <div class="col">
                    <div class="pinned-list h-100">
                        <div class="cursor-pointer mb-2">
                            @foreach (var winner in item.TopThreeWinners.Take(4))
                            {
                                var cover = Model.ResolveCoverImage(winner.CoverImageUrl);
                                <img class="game-card-cover me-1 mb-1" src="@cover" alt="@winner.GameTitle" title="@winner.GameTitle" height="112" width="83" />
                            }
                        </div>
                        <a class="pinned-list-title" href="/list/@item.Slug"><b>@item.Title @item.Year</b></a>
                        <p class="pinned-list-info">
                            @GameListLoc["Basedon"] <b>@item.NumberOfSources</b> @GameListLoc["List"]@(item.NumberOfSources > 1 ? "s" : "")
                            -
                            @item.NumberOfGames @GameListLoc["Game"]@(item.NumberOfGames > 1 ? "s" : "")
                        </p>
                    </div>
                </div>
            }
        </div>

        @if (Model.Pager is { TotalPages: > 1 } pager)
        {
            <nav aria-label="List pagination" class="mt-4">
                <ul class="pagination">
                    <li class="page-item @(pager.CurrentPage == 1 ? "disabled" : string.Empty)">
                        <a class="page-link" href="@(pager.CurrentPage == 1 ? "#" : Model.BuildPageUrl(pager.CurrentPage - 1))" aria-label="Previous">&laquo;</a>
                    </li>
                    @foreach (var pageNumber in pager.Pages)
                    {
                        <li class="page-item @(pageNumber == pager.CurrentPage ? "active" : string.Empty)">
                            <a class="page-link" href="@(Model.BuildPageUrl(pageNumber))">@pageNumber</a>
                        </li>
                    }
                    <li class="page-item @(pager.CurrentPage == pager.TotalPages ? "disabled" : string.Empty)">
                        <a class="page-link" href="@(pager.CurrentPage == pager.TotalPages ? "#" : Model.BuildPageUrl(pager.CurrentPage + 1))" aria-label="Next">&raquo;</a>
                    </li>
                </ul>
            </nav>
        }
    }
</section>

<style>
    .open-sub-title {
        color: rgb(192, 192, 192);
        font-size: 0.9em;
    }

    .open-title {
        font-size: 2em;
    }

    .user-avatar {
        width: 48px;
        height: 48px;
        border-radius: 50%;
        background-color: #343a40;
        color: #fff;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        font-size: 1rem;
    }

    .user-activity-card {
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        padding-bottom: 0.75rem;
    }
</style>
